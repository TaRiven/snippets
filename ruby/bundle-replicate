#!/usr/bin/env ruby

def get_stored_state(topdir)
	d=Dir.open(topdir)
	latest=(d.grep(/.hg$/).sort {|x,y| y <=> x})[0]
	d.close
	File.basename(latest, '.hg').split /-/
end

def first_successful(cmds)
	cmds.each do |cmd|
		result=`#{cmd}`
		if $?.success? then
			return result.split()[0]
		end
	end
	raise "Cannot identify tree version."
end

def get_latest_repo_version
	first_successful(['hg id -r qparent', 'hg id -r tip'])
end

# main
topdir, devdir=$*

Dir.chdir devdir

ver, min, max = get_stored_state(topdir)
latest_ver=get_latest_repo_version

puts "Latest is #{latest_ver} (we've got #{max})"

if max != latest_ver then
	nextid=Kernel.sprintf "%04d", ver.to_i+1
	puts "Need to update to #{nextid} for #{latest_ver}"
	outfile=File.join topdir, "#{nextid}-#{max}-#{latest_ver}.hg"
	unless system('hg', 'bundle', '-r', latest_ver, '--base', max, outfile)
		raise "Crap.  Bundle failed."
	end
end
