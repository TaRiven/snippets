#!/usr/local/bin/perl
# Copyright (c) 1997  Dustin Sallings
#
# $Id: checkwebserver,v 1.2 1997/11/20 08:19:54 dustin Exp $
# $Source: /Users/dustin/stuff/cvstest/perl/net/checkwebserver,v $

use Socket;

sub timeout
{
    alarm(0);
    $SIG{'ALRM'}=timeout;
    return(0);
}

sub GetStatus
{
    my($url)=@_;
    my($host, $request, @status);

    if($url eq "")
    {
	return("", 0, "Invalid URL format");
    }

    if(!($url=~/http:\/\/([^\/]+)(.*)/))
    {
	return("", 0, "Invalid URL format");
    }

    ($host, $request)=($1, $2);

    $request="/" if($request eq "");

    # print "Getting $request from $host\n";

    $proto=getprotobyname('tcp');
    socket(S, PF_INET, SOCK_STREAM, $proto);
    $sin=sockaddr_in(80, inet_aton($host));
    alarm(15);
    connect(S, $sin) || return("", "-1", "Connection error");
    alarm(0);

    print S "GET $request HTTP/1.0\n\n";

    chop($in=<S>);
    @status=split(/\s+/, $in, 3);
    close(S);
    return(@status);
}

$SIG{'ALRM'}=timeout;

open(IN, $ARGV[0]) || die("$ARGV[0]: $!");
while(<IN>)
{
    chop;
    next if(/^#/);
    next unless(/[A-z0-9]+/);
    @status=GetStatus($_);
    print "$_:  $status[1]\n";
}
close(IN);
