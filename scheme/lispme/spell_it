; spell it

(define nato-letters '(
  (#\a . "alpha") (#\b . "bravo")
  (#\c . "charlie") (#\d . "delta")
  (#\e . "echo") (#\f . "foxtrot")
  (#\g . "golf") (#\h . "hotel")
  (#\i . "india") (#\j . "juliet")
  (#\k . "kilo") (#\l . "lima")
  (#\m . "mike") (#\n . "november")
  (#\o . "oscar") (#\p . "papa")
  (#\q . "quebec") (#\r . "romeo")
  (#\s . "sierra") (#\t . "tango")
  (#\u . "uniform") (#\v . "victor")
  (#\w . "whiskey") (#\x . "x-ray")
  (#\y . "yankee") (#\z . "zulu")
  (#\0 . "zero") (#\1 . "one")
  (#\2 . "two") (#\3 . "tree")
  (#\4 . "fower") (#\5 . "fife")
  (#\6 . "six") (#\7 . "seven")
  (#\8 . "eight") (#\9 . "niner")))

(define (nato-string s)
  (map (lambda (c)
    (if (assq c nato-letters)
        (cdr (assq c nato-letters))
        (list->string (list c))))
    (string->list (lc-string s))))